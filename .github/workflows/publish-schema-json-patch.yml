name: Publish Schema JSON Patch

on:
  release:
    types: [created]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Switch to main branch
        run: |
          git checkout main
          git pull origin main
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Get release version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - name: Update package version
        run: |
          cd packages/schema-json-patch
          npm version ${{ steps.get_version.outputs.VERSION }} --no-git-tag-version
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Commit version update
        run: |
          git add packages/schema-json-patch/package.json
          git commit -m "chore: update version to ${{ steps.get_version.outputs.VERSION }} [skip ci]"
      - name: Push changes
        run: git push origin main
      - name: Clean
        run: pnpm -F @waveox/schema-json-patch clean
      - name: Build
        run: pnpm build:package
      - name: Test
        run: pnpm -F @waveox/schema-json-patch test
      - name: Check for d.ts files
        run: find packages/schema-json-patch/dist -name "*.d.ts" | sort
      - name: Publish schema-json-patch
        run: cd packages/schema-json-patch && pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
